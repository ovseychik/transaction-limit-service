name: Build application and deploy container

on:
  push:
    branches:
      - 'main'
  pull_request:
    branches:
      - 'dev'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build with Maven
        run: mvn -B package --file pom.xml
        env:
          API_KEY: ${{ secrets.API_KEY }}

  push-image:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build with Maven
        run: mvn -B package --file pom.xml
        env:
          API_KEY: ${{ secrets.API_KEY }}

      - name: Log in to the Container registry
        uses: docker/login-action@v3.1.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5.3.0
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Store version tag of built container
        run: |
          echo '${{ steps.meta.outputs.tags }}' > version.txt
        shell: bash

      - name: Upload version tag
        uses: actions/upload-artifact@v4.3.1
        with:
          name: version
          path: version.txt

  deploy:
    needs: push-image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download version tag
        uses: actions/download-artifact@v4.1.4
        with:
          name: version

      - name: Set version environment variable
        id: version
        run: echo "VERSION=$(cat version.txt)" >> $GITHUB_ENV

      - name: Deploy to remote server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USERNAME }}
          key: ${{ secrets.DEPLOY_SSH_KEY }}
          passphrase: ${{ secrets.DEPLOY_SSH_KEY_PASSPHRASE }}
          script: |
            docker pull ${{ env.VERSION }}
            docker stop luxury_transaction_service || true
            docker rm luxury_transaction_service || true
            docker run -d -p 9000:8080 --name luxury_transaction_service    \
              -e SPRING_PROFILES_ACTIVE=prod                                \
              -e API_KEY=${{ secrets.API_KEY }}                             \
              ${{ env.VERSION }}
            docker image prune -a -f